[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "turboapi-addons"
version = "0.1.0"
description = "Addons for TurboAPI framework"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "TurboAPI Team", email = "team@turboapi.dev" }]
keywords = ["turboapi", "addons", "oauth", "apm", "extensions"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: System :: Monitoring",
]

dependencies = ["turboapi>=0.1.0"]

[project.optional-dependencies]
# APM Addons
apm-newrelic = ["newrelic-telemetry-sdk>=0.4.0"]
apm-datadog = ["ddtrace>=1.0.0"]
apm-elastic = ["elastic-apm>=6.0.0"]
apm-all = [
    "newrelic-telemetry-sdk>=0.4.0",
    "ddtrace>=1.0.0",
    "elastic-apm>=6.0.0",
]

# OAuth2 Addons
oauth-google = ["aiohttp>=3.8.0"]
oauth-github = ["aiohttp>=3.8.0"]
oauth-microsoft = ["aiohttp>=3.8.0"]
oauth-all = ["aiohttp>=3.8.0"]

# All addons
all = [
    "newrelic-telemetry-sdk>=0.4.0",
    "ddtrace>=1.0.0",
    "elastic-apm>=6.0.0",
    "aiohttp>=3.8.0",
]

# Development dependencies
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "httpx>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/turboapi/turboapi-addons"
Documentation = "https://docs.turboapi.dev/addons"
Repository = "https://github.com/turboapi/turboapi-addons"
Issues = "https://github.com/turboapi/turboapi-addons/issues"

[tool.hatch.build.targets.wheel]
packages = ["turboapi_addons"]

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [".venv", "build", "dist", "__pycache__"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true
follow_imports = "silent"
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true
exclude = ["\\.venv", "build", "dist", "tests"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["--verbose", "--strict-markers", "--strict-config"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[dependency-groups]
dev = ["mypy>=1.18.2"]
